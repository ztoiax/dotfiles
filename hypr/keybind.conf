
# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier
$shiftMod=SUPER_SHIFT
$altMod=SUPER_ALT
$shift=SHIFT
$CtrlAlt=CONTROLALT

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
# bind = $mainMod, return, exec, $terminal
bind = $mainMod, return, exec, ~/.config/hypr/script/打开终端.sh
bind = $mainMod, Q, killactive,
bind = $shiftMod, Q, exit,
bind = $mainMod, W, fullscreen, 0
bind = $mainMod, G, togglegroup,
bind = $shiftMod, W, togglefloating,

bind = $mainMod, B, exec, killall -9 waybar || waybar # Toggle hide/show waybar - Disable
bind = $mainMod, E, exec, $editor
bind = $mainMod, R, exec, $terminal -e $fileManager-tui
bind = ALT, space, exec, rofi -matching normal -show run
bind = ALT+SHIFT, space, exec, rofi -matching normal -show drun

# 切换窗口
$key = TAB
$modifier = ALT
$modifier_release = ALT_L
$reverse = SHIFT

# hyprwitch
bind = $mainMod, TAB, exec, hyprswitch simple --sort-recent
binde = ALT, TAB, exec, hyprswitch gui --do-initial-execute
bind = ALT, TAB, submap, switch
binde = ALT SHIFT, TAB, exec, hyprswitch gui --do-initial-execute -r
bind = ALT SHIFT, TAB, submap, switch
submap = switch

# allow repeated window switching in submap (same keys as repeating while starting)
binde = $modifier, $key, exec, hyprswitch gui
binde = $modifier $reverse, $key, exec, hyprswitch gui -r

# switch to specific window offset (TODO replace with a more dynamic solution)
bind = $modifier, 1, exec, hyprswitch gui --offset=1
bind = $modifier, 2, exec, hyprswitch gui --offset=2
bind = $modifier, 3, exec, hyprswitch gui --offset=3
bind = $modifier, 4, exec, hyprswitch gui --offset=4
bind = $modifier, 5, exec, hyprswitch gui --offset=5

bind = $modifier $reverse, 1, exec, hyprswitch gui --offset=1 -r
bind = $modifier $reverse, 2, exec, hyprswitch gui --offset=2 -r
bind = $modifier $reverse, 3, exec, hyprswitch gui --offset=3 -r
bind = $modifier $reverse, 4, exec, hyprswitch gui --offset=4 -r
bind = $modifier $reverse, 5, exec, hyprswitch gui --offset=5 -r

# # exit submap and stop hyprswitch
bindrt = $modifier, $modifier_release, exec, hyprswitch close
bindrt = $modifier, $modifier_release, submap, reset

# if it somehow doesn't close on releasing $switch_release, escape can kill (doesnt switch)
bindr = ,escape, exec, hyprswitch close --kill
bindr = ,escape, submap, reset
submap = reset

# Move focus with mainMod + arrow keys
bind = $mainMod, Left, movefocus, l
bind = $mainMod, Right, movefocus, r
bind = $mainMod, Up, movefocus, u
bind = $mainMod, Down, movefocus, d

bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, J, layoutmsg, cyclenext
bind = $mainMod, K, layoutmsg, cycleprev

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Move focused window to a relative workspace
bind = $shiftMod, J, movetoworkspace, r+1
bind = $shiftMod, K, movetoworkspace, r-1

# Example special workspace (scratchpad)
bind = $mainMod, z, togglespecialworkspace
bind = $shiftMod, z, exec, ~/.config/hypr/script/移动当前窗口到特殊工作区.sh

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Resize windows
binde = $shiftMod, Right, resizeactive, 30 0
binde = $shiftMod, Left, resizeactive, -30 0
binde = $shiftMod, Up, resizeactive, 0 -30
binde = $shiftMod, Down, resizeactive, 0 30

# wallpaper
# bind = $CtrlAlt, N, exec, waypaper-engine next-image
# bind = $CtrlAlt, P, exec, waypaper-engine previous-image
bind = $CtrlAlt, N, exec, wpaperctl next
bind = $CtrlAlt, P, exec, wpaperctl previous

# swaync通知守护进程
bind = $mainMod, N, exec, swaync-client -t -sw

# 声音
# bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
# bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
# bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
# bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
# bindel = ALT, F6, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
# bindel = ALT, F7, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
# bindel = ALT, F8, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
# bindel = ALT, N, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
# bindel = ALT, M, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioRaiseVolume, exec, swayosd-client --output-volume 5
bindel = ,XF86AudioLowerVolume, exec, swayosd-client --output-volume -5
bindel = ,XF86AudioMute, exec, swayosd-client --output-volume mute-toggle
bindel = ,XF86AudioMicMute, exec, swayosd-client --output-volume mute-toggle
bindel = ALT, F6, exec, swayosd-client --output-volume mute-toggle
bindel = ALT, F7, exec, swayosd-client --output-volume -5
bindel = ALT, F8, exec, swayosd-client --output-volume 5
bindel = ALT, N, exec, swayosd-client --output-volume -5
bindel = ALT, M, exec, swayosd-client --output-volume 5

# 大小写通知
bindr = CAPS, Caps_Lock, exec, swayosd-client --caps-lock

# 亮度
# bindel = ,XF86MonBrightnessUp, exec, brightnessctl set 5+
# bindel = ,XF86MonBrightnessDown, exec, brightnessctl set 5-
# bindel = ALT, F3, exec, brightnessctl set 5+
# bindel = ALT, F2, exec, brightnessctl set 5-
bindel = ,XF86MonBrightnessUp, exec, swayosd-client --brightness +5
bindel = ,XF86MonBrightnessDown, exec, swayosd-client --brightness -5
bindel = ALT, F3, exec, swayosd-client --brightness +5
bindel = ALT, F2, exec, swayosd-client --brightness -5

# dmenu
bindel = ALT, O, exec, ~/.mybin/dmenu-search.py
bindel = ALT+SHIFT, O, exec, ~/.mybin/dmenu-search.py --category
bindel = ALT, U, exec, ~/.mybin/dmenu-url.py
bindel = ALT, H, exec, ~/.mybin/dmenu-cphistory.sh
bindel = ALT, L, exec, ~/.mybin/dmenu-cpline.sh
# bindel = CTRL, SEMICOLON, exec, cliphist list | rofi -dmenu | cliphist decode | wl-copy
bindel = CTRL, return, exec, adb shell input keyevent 26

# 截图
$screen_file=~/Downloads/screen_shot_$(date +"Y-m-d_H-M-S").png
# bind=$CtrlAlt, A, exec, grim -g "$(slurp)" $screen_file # 区域截图
bind = $CtrlAlt, A, exec, hyprshot -m region -o ~/Downloads/
bind = , Print,      exec, grim $screen_file # 全屏截图
bind = $shift, Print,exec, grim -g "$(slurp)" - | wl-copy # 复制区域截图
bind = Alt, Print,  exec, grim - | wl-copy # 复制全屏截图

# 录屏
bind = $CtrlAlt+SHIFT, A, exec, kooha
# bind=$CtrlAlt+SHIFT, A, exec, wf-recorder -f ~/Downloads/record_$(date +"Y-m-d_H-M-S").mkv
